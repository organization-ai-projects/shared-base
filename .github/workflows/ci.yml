name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'fix/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20] # Test with supported Node.js LTS versions

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # Specify the pnpm version

      # Step 3: Set up Node.js and cache
      - name: Set up Node.js and cache
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm' # Enable caching for pnpm

      # Step 4: Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Step 5: Run linting
      - name: Lint code
        run: pnpm lint

      # Step 6: Run unit tests
      - name: Run tests
        run: pnpm test

      # Step 7: Generate test coverage
      - name: Generate coverage report
        run: pnpm test:coverage

      # Step 8: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release --extends ./release.config.mjs
